// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    apply from: this.file("version.gradle")
    repositories {
//        maven { url 'https://s.aliyun.com/repository/public' }
//        maven { url 'https://maven.aliyun.com/repository/google' }
//        maven { url "https://jitpack.io" }
//        maven { url 'https://repo1.maven.org/maven2/' }
        google()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${versions.gradle}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        // tinkersupport插件, 其中lastest.release指拉取最新版本，也可以指定明确版本号，例如1.0.4
//        classpath "com.tencent.bugly:tinker-support:${versions.tinker_support}"
        classpath "com.billy.android:cc-register:${versions.cc_register}"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        //plugins
        classpath "com.wlqq.phantom:phantom-host-gradle:${versions.phantom.allVersion}"
        classpath "com.wlqq.phantom:phantom-plugin-gradle:${versions.phantom.allVersion}"

    }
}

allprojects {
//    repositories {
//        maven { url 'https://maven.aliyun.com/repository/public' }
//        maven { url 'https://maven.aliyun.com/repository/google' }
//        maven { url "https://jitpack.io" }
//        maven { url 'https://repo1.maven.org/maven2/' }
//    }

    apply plugin: 'idea'
//    buildDir = new File(rootDir, "gradle-build/${path.replaceAll(':', '/')}")
//    println(" $it ->  ${path.replaceAll(':', '/')} ,$buildDir")

    it.afterEvaluate {
        try {
            it.android {
                compileOptions {
                    sourceCompatibility 1.8
                    targetCompatibility 1.8
                }
//                kotlinOptions {
//                    jvmTarget = "1.8"
//                }
            }
        } catch ( e) {
        }
    }
}


/**
 *  maven { url 'https://mirrors.huaweicloud.com/repository/maven/' }*   jcenter()
 *   google()
 */

task clean(type: Delete) {
    delete rootProject.buildDir
}

